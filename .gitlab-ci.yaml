#not working code just an example of WIP CI/CD pipeline for k8s on an AWS eks cluster

image: docker:latest
services:
  - docker

stages:
  - build
  - deploy

#this allows for rollback
variables:
  CONTAINER_IMAGE: jb/ml_project:${CI_COMMIT_SHORT_SHA}


#for best practices this variables would be stored in the gitlab ui and not hardcoded
build:
  stage: build
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} jb/ml_project:latest
    - docker push ${CONTAINER_IMAGE}

deploy:
  stage: deploy
  image: helmimage
  script:
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deployment.yaml
    - kubectl apply -f deployment.yaml