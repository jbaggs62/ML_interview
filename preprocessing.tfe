# imports
from flask import Flask, jsonify, request, make_response
from flask.wrappers import Response
from flask_restful import Resource, Api, reqparse
import pandas as pd
import numpy as np
import sklearn
import pickle
import json
from make_json_test_file import json_object
from configs import Final_Model, variables

# initialize Flask
APP = Flask(__name__)
API = Api(APP)


class Predict(Resource):
    @staticmethod
    def post():
        parser = reqparse.RequestParser()  # initialize
        parser.add_argument("x12")
        parser.add_argument("x31_asia")
        parser.add_argument("x31_germany")
        parser.add_argument("x31_japan")
        parser.add_argument("x44")
        parser.add_argument("x53")
        parser.add_argument("x56")
        parser.add_argument("x58")
        parser.add_argument("x5_monday")
        parser.add_argument("x5_saturday")
        parser.add_argument("x5_sunday")
        parser.add_argument("x5_tuesday")
        parser.add_argument("x62")
        parser.add_argument("x81_August")
        parser.add_argument("x81_December")
        parser.add_argument("x81_February")
        parser.add_argument("x81_January")
        parser.add_argument("x81_July")
        parser.add_argument("x81_June")
        parser.add_argument("x81_March")
        parser.add_argument("x81_May")
        parser.add_argument("x81_November")
        parser.add_argument("x81_October")
        parser.add_argument("x81_September")
        parser.add_argument("x91")

        args = parser.parse_args()

        x_new = np.fromiter(args.values(), dtype=float)  # convert input to array

        out = {"Prediction": Final_Model.predict([x_new])[0], "variables": variables}

        return out, 200


API.add_resource(Predict, "/predict")
if __name__ == "__main__":
    APP.run(debug=True, port="1080")
